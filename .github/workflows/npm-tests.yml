# #
#   @type               github workflow
#   @author             Aetherinox
#   @url                https://github.com/Aetherinox
#   @usage              builds and releases binary files for ntfy-desktop
#                       creates a new github release
#
#   @secrets            secrets.SELF_TOKEN                                          self github personal access token (fine-grained)
#                       secrets.SELF_TOKEN_CL                                       self github personal access token (classic)
#                       secrets.NPM_TOKEN                                           self npmjs access token
#                       secrets.PYPI_API_TOKEN                                      self Pypi API token (production site) - https://pypi.org/
#                       secrets.PYPI_API_TEST_TOKEN                                 self Pypi API token (test site) - https://test.pypi.org/
#                       secrets.SELF_DOCKERHUB_TOKEN                                self Dockerhub token
#                       secrets.CODECOV_TOKEN                                       codecov upload token for nodejs projects
#                       secrets.MAXMIND_GELITE_TOKEN                                maxmind API token
#                       secrets.CF_ACCOUNT_ID                                       cloudflare account id
#                       secrets.CF_ACCOUNT_TOKEN                                    cloudflare account token
#                       secrets.ORG_TOKEN                                           org github personal access token (fine-grained)
#                       secrets.ORG_TOKEN_CL                                        org github personal access token (classic)
#                       secrets.ORG_DOCKERHUB_TOKEN                                 org dockerhub secret
#                       secrets.ORG_GITEA_TOKEN                                     org gitea personal access token (classic) with package:write permission
#                       secrets.BOT_GPG_KEY_ASC                                     bot gpg private key (armored) | BEGIN PGP PRIVATE KEY BLOCK
#                       secrets.BOT_GPG_KEY_B64                                     bot gpg private key (binary) converted to base64
#                       secrets.BOT_GPG_PASSPHRASE                                  bot gpg private key passphrase
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_RELEASES                discord webhook to report release notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_WORKFLOWS               discord webhook to report workflow notifications from github to discord
#                       secrets.DISCORD_WEBHOOK_CHAN_GITHUB_UPDATES                 discord webhook to report activity notifications from github to discord
#
#   @local              these workflows can be tested locally through the use of `act`
#                           https://github.com/nektos/act
#                       Extract act to folder
#                       Add system env var with path to act.exe
#                       Run the commands:
#                           git pull https://github.com/username/repo
#                           act -W .github/workflows/npm-tests.yml -P ubuntu-latest=catthehacker/ubuntu:full-22.04
#                           act -W .github/workflows/npm-tests.yml -s TOKEN_CL=XXXXXXXXXX --pull=false
# #

name: '📦 Package › Tests'
run-name: '📦 Package › Tests'

# #
#   triggers
# #

on:
    workflow_dispatch:

# #
#   environment variables
# #

env:
    ASSIGN_USER:                    Aetherinox
    BOT_NAME_1:                     EuropaServ
    BOT_NAME_2:                     BinaryServ
    BOT_NAME_DEPENDABOT:            dependabot[bot]
    BOT_NAME_RENOVATE:              renovate[bot]
    GPG_KEY_BASE64:                 ${{ secrets.ADMINSERV_GPG_KEY_B64 }}
    GPG_KEY_PASSPHRASE:             ${{ secrets.ADMINSERV_GPG_PASSPHRASE }}

# #
#   Jobs
# #

jobs:
    test:
        name: >-
          🧪 Tests
        runs-on: ubuntu-latest
      # runs-on: apollo-x64
        timeout-minutes: 10
        strategy:
            matrix:
                node-version: [22.x, 23.x, 24.x,]

        steps:

            # #
            #   Tests › Checkout
            # #

            - name: '☑️ Checkout'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   Tests › Job Information
            # #

            - name: >-
                  🔄 Load Job
              uses: qoomon/actions--context@v4
              id: 'context'

            # #
            #   Tests › Setup NodeJS
            # #

            - name: '⚙️ Setup Node'
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}

            # #
            #   Tests › Setup Packages
            # #

            - name: '📦 Install NPM & Apt Packages'
              run: |
                  npm install
                  npx playwright install --with-deps
                  npm i -D @playwright/test

            # #
            #   Tests › Setup Packages
            # #

            - name: '📦 List NPM Packages'
              run: |
                  npm list

            # #
            #   Tests › Run Tests
            # #

            - name: >-
                  🧪 Run Test
              id: task_test_run
              run: |
                  xvfb-run --auto-servernum npx playwright test --trace on

            # #
            #   Tests › Upload Report
            # #

            - name: >-
                  📋 Generate Report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: Report-${{ matrix.node-version }}
                  path: playwright-report/
                  retention-days: 30

            # #
            #   Tests › Upload Screenshot
            # #

            - name: >-
                  🔗 Upload Screenshot
              id: task_test_artifacts_screenshot
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: Screenshot-${{ matrix.node-version }}
                  path: test-results/1.png
                  retention-days: 30
